# https://medium.com/scalereal/ci-cd-with-github-action-deploying-to-amazon-elastic-container-service-5f5877186216
# https://plainenglish.io/blog/how-to-push-an-image-to-aws-ecr
# https://github.com/aniketpatel12/docker_nodejs_demo/blob/master/.github/workflows/deploy.yml

name: Deploy to ECR
on:
  push:
    branches:
      - "main"
      - "releases/**"

  # workflow_dispatch:
  #   branches:
  #     - master
  #     - feature/**

  # pull_request:
  #   types: [opened, synchronize, reopened]

  # tags:
  #   - .*

# on:
#   create:
#     branches: [main]
#   pull_request:
#     types: [opened, synchronize, reopened]

#     # tags:
#     #   - .*
#   workflow_dispatch:

env:
  AWS_REGION: us-east-2
  CONTAINER_NAME: example-app

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: example-app-image
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
